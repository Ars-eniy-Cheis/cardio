/**
 * Cardio-in-the-VaiN
 * The API for the Cardio Center project
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AuthCredentials from './model/AuthCredentials';
import AuthorizationScheme from './model/AuthorizationScheme';
import Error from './model/Error';
import FormField from './model/FormField';
import FormStep from './model/FormStep';
import Patient from './model/Patient';
import PatientCreation from './model/PatientCreation';
import PatientUpdate from './model/PatientUpdate';
import PatientsPagination from './model/PatientsPagination';
import ResetUserPasswordRequest from './model/ResetUserPasswordRequest';
import User from './model/User';
import UserCreation from './model/UserCreation';
import UserUpdate from './model/UserUpdate';
import UsersPagination from './model/UsersPagination';
import WizardForm from './model/WizardForm';
import PatientsApi from './api/PatientsApi';
import SchemasApi from './api/SchemasApi';
import TokensApi from './api/TokensApi';
import UsersApi from './api/UsersApi';


/**
* The API for the Cardio Center project.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CardioInTheVaiN = require('index'); // See note below*.
* var xxxSvc = new CardioInTheVaiN.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CardioInTheVaiN.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CardioInTheVaiN.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CardioInTheVaiN.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AuthCredentials model constructor.
     * @property {module:model/AuthCredentials}
     */
    AuthCredentials,

    /**
     * The AuthorizationScheme model constructor.
     * @property {module:model/AuthorizationScheme}
     */
    AuthorizationScheme,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The FormField model constructor.
     * @property {module:model/FormField}
     */
    FormField,

    /**
     * The FormStep model constructor.
     * @property {module:model/FormStep}
     */
    FormStep,

    /**
     * The Patient model constructor.
     * @property {module:model/Patient}
     */
    Patient,

    /**
     * The PatientCreation model constructor.
     * @property {module:model/PatientCreation}
     */
    PatientCreation,

    /**
     * The PatientUpdate model constructor.
     * @property {module:model/PatientUpdate}
     */
    PatientUpdate,

    /**
     * The PatientsPagination model constructor.
     * @property {module:model/PatientsPagination}
     */
    PatientsPagination,

    /**
     * The ResetUserPasswordRequest model constructor.
     * @property {module:model/ResetUserPasswordRequest}
     */
    ResetUserPasswordRequest,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserCreation model constructor.
     * @property {module:model/UserCreation}
     */
    UserCreation,

    /**
     * The UserUpdate model constructor.
     * @property {module:model/UserUpdate}
     */
    UserUpdate,

    /**
     * The UsersPagination model constructor.
     * @property {module:model/UsersPagination}
     */
    UsersPagination,

    /**
     * The WizardForm model constructor.
     * @property {module:model/WizardForm}
     */
    WizardForm,

    /**
    * The PatientsApi service constructor.
    * @property {module:api/PatientsApi}
    */
    PatientsApi,

    /**
    * The SchemasApi service constructor.
    * @property {module:api/SchemasApi}
    */
    SchemasApi,

    /**
    * The TokensApi service constructor.
    * @property {module:api/TokensApi}
    */
    TokensApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi
};

/**
 * Cardio-in-the-VaiN
 * The API for the Cardio Center project
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import WizardForm from '../model/WizardForm';

/**
* Schemas service.
* @module api/SchemasApi
* @version 1.0
*/
export default class SchemasApi {

    /**
    * Constructs a new SchemasApi. 
    * @alias module:api/SchemasApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createSchema operation.
     * @callback module:api/SchemasApi~createSchemaCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WizardForm} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates new schema
     * @param {Object} opts Optional parameters
     * @param {module:model/WizardForm} opts.wizardForm Schema definition
     * @param {module:api/SchemasApi~createSchemaCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WizardForm}
     */
    createSchema(opts, callback) {
      opts = opts || {};
      let postBody = opts['wizardForm'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jwtAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WizardForm;
      return this.apiClient.callApi(
        '/schemas', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSchemas operation.
     * @callback module:api/SchemasApi~getSchemasCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/WizardForm>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets schemas list
     * @param {module:api/SchemasApi~getSchemasCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/WizardForm>}
     */
    getSchemas(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jwtAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [WizardForm];
      return this.apiClient.callApi(
        '/schemas', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
